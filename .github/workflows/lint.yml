name: ESLint Workflow
on:
  push:
    branches:
      - master

    paths-ignore:
      - '.github/**'
      - '.husky/**'
      - '.vscode/**'
      - 'assets/**'
      - 'locales/**'
      - 'docker/**'
      - '.dockerignore'
      - '.eslintignore'
      - '.gitignore'
      - '**.md'
      - 'LICENSE'
      - 'renovate.json'

  pull_request:
    branches:
      - master

    paths-ignore:
      - '.github/**'
      - '.husky/**'
      - '.vscode/**'
      - 'assets/**'
      - 'locales/**'
      - 'docker/**'
      - '.dockerignore'
      - '.eslintignore'
      - '.gitignore'
      - '**.md'
      - 'LICENSE'
      - 'renovate.json'
jobs:
  lint:
    name: "ESLint Workflow"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js v17.x
        uses: actions/setup-node@v2
        with:
          node-version: 17.x

      - name: Retrieve Yarn cache directory
        id: cache-dir
        run: |
          echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn dependencies
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache node_modules
        id: nm-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-17.x-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-17.x-nodemodules-

      - name: Install dependencies if needed
        if: |
          steps.yarn-cache.outputs.cache-hit != 'true' ||
          steps.nm-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Build the project to see if it compiles
        run: yarn build:ci

      - name: Lint project for any linting errors
        run: yarn lint:ci
